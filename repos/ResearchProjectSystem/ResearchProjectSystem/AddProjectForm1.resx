<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAAAAAAAD/2wBDAAoHBwgHBgoICAgLCgoLDhgQDg0NDh0VFhEYIx8lJCIfIiEm
        KzcvJik0KSEiMEExNDk7Pj4+JS5ESUM8SDc9Pjv/2wBDAQoLCw4NDhwQEBw7KCIoOzs7Ozs7Ozs7Ozs7
        Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozv/wAARCAKyArIDAREAAhEBAxEB/8QA
        HAABAQABBQEAAAAAAAAAAAAAAAEHAgQFBggD/8QARRABAAEDAwIEAgUIBggHAAAAAAECAwQFBhEhMQcS
        QVETYRQicZGhFRYjMkKBsdEXMzZTcnQkUmNzkqKywTVDVFVkgvD/xAAbAQEBAAMBAQEAAAAAAAAAAAAA
        AQIDBAUGB//EACMRAQACAgICAgMBAQAAAAAAAAABAgMRBCESMQUTIkFRMmH/2gAMAwEAAhEDEQA/AMyg
        oAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAACAoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAgKAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAACIKoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAiCqAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAICgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAICgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAoAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAICgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAICgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAACAoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgKAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgKAAAAAAAAA
        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
        Mba74Xbl0WqqucT6TZj/AMyzPMGx1arBy6ek4l6Jjp/Vz/IGmnCy6p4pxr1U+0W5BzWn7H3Lqkc4ukX7
        kcc9op/iDef0Xbz4/wDA7v8Ax0/zA/ou3p/7Hd/46f5g+lrwp3hd6VaTVb/xVR/MH1/ok3dE8fk+ft80
        A1W/CPdldflnB8ke8ybHatr+DGXZzrOZq+Vaii1VzNmmJ5kGY7VFNuim3RExFEeWIn2B9QUAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEBOI55A4jkFAAA4A4j2BPL7A
        eWnvxAPjcw8a7PNdi3V9tMAlGBh0VeanGtRPv5YB94piI4iIiAWIiAUGmY5+wDyxxxwC8cdkE4+ahERE
        goKAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgKAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIACgAAAAAA
        gAAKAAAAACAAoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAICgAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAICgAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAoAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAACAoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgKAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgKAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAICgAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgKAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgKAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAICgAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        iCqAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAICgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAgKAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgKAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACIKoAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAiCqAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAICo
        IooCCKKACAoAICoCgAAAAgiigAgKgAKCCKKgiigAgKACAoIACggKAAAAgiioCiAqCKKAAgKCAoIIooAA
        AAAAICgAgKAAAAgKAICgAICggiioCj//2Q==
</value>
  </data>
</root>